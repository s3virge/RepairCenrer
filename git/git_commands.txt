git log
git add -A # добавляет все не отслеживаемые файлы в git (тоже самое git add .)
git reset --soft HEAD~ #отменяет последний коммит
git reset --hard HEAD~ #удаляет последний коммит, но не изменения в файлах
git reset --hard HEAD~2 #удаляет два последних коммита
"git reset HEAD <file>..." щоб прибрати з буфера
git push -f #--force обновляет удаленный репозиторий после удаления локального коммита
git checkout <file> #отменяет измениния в файле
git add <file>..." щоб оновити дані для здійснення
git checkout -- <file>..." щоб скасувати зміни в робочій директорії checkout - контроль

git commit --amend -m "start develop giveout pane" #изменить последний коммит
----------------------------------------------------------------
git branch <name> # создает новую ветку
git branch # показывает выбраную ветвь
git checkout -b <name> # создаёт и сразу переключается на ветку name
git branch -D <name> # удаляет branch name
$ git checkout master # Switched to branch "master"
git branch -r #показывает удаленную ветку
git branch -r -d <name> #удаляет удаленную ветку, наверно локально
git push origin --delete resources #удаляет ветку resources на сервере
----------------------------------------------------------------
git stash # stash - прятать. Спрятать изменения в хранилище.
git stash pop # вынуть состояние ветки
----------------------------------------------------------------
git push --set-upstream origin <name> # толкнуть ветку name на удалённый сервер.
-------------------------------------------------------------------
git branch -r | grep -v '\->' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
git fetch --all
git pull --all
(кажется, что pull извлекает все ветки из всех пультов, но я всегда выбираю сначала, чтобы быть уверенным)
Запустите первую команду, только если на сервере есть удаленные ветки, которые не отслеживаются вашими локальными ветвями.
P.S. AFAIK git fetch --all и git remote update эквивалентны.
-----------------------------------------------------------------------
git fetch
git pull
---------------------------------------------------------------
git config credential.helper store #save passwords in store. Do not ask password in console.
